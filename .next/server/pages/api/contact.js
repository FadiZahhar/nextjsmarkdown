"use strict";(()=>{var e={};e.id=91,e.ids=[91],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},8438:(e,t,s)=>{s.r(t),s.d(t,{config:()=>c,default:()=>l,routeModule:()=>u});var a={};s.r(a),s.d(a,{default:()=>d});var n=s(1802),r=s(7153),i=s(6249);let o=require("mongodb");async function handler(e,t){if("POST"===e.method){let s;let{email:a,name:n,message:r}=e.body;if(!a||!a.includes("@")||!n||""===n.trim()||!r||""===r.trim()){t.status(422).json({message:"Invalid input."});return}let i={email:a,name:n,message:r};try{s=await o.MongoClient.connect("mongodb+srv://maximilian:2YkcXq43KyPk0vqp@cluster0.ntrwp.mongodb.net/my-site?retryWrites=true&w=majority")}catch(e){t.status(500).json({message:"Could not connect to database."});return}let d=s.db();try{let e=await d.collection("messages").insertOne(i);i.id=e.insertedId}catch(e){s.close(),t.status(500).json({message:"Storing message failed!"});return}s.close(),t.status(201).json({message:"Successfully stored message!",message:i})}}let d=handler,l=(0,i.l)(a,"default"),c=(0,i.l)(a,"config"),u=new n.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/contact",pathname:"/api/contact",bundlePath:"",filename:""},userland:a})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),s=t.X(0,[222],()=>__webpack_exec__(8438));module.exports=s})();